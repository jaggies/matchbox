if $(OS) = MACOSX {
	# Had to compile this manually.
	GCC_HOME = $(HOME)/trees/open-source/gcc-arm-none-eabi-4_9-2015q3/bin/ ;
} else {
	GCC_HOME = /bin/ ;
}

TARGET ?= stm32f4xx ;

ARCH = arm-none-eabi ;
GCC_PATH = $(GCC_HOME)$(ARCH) ;
ALL_LOCATE_TARGET = $(TOP)/build/$(ARCH)/$(TARGET) ;
AS = $(GCC_PATH)-as ;
AR = $(GCC_PATH)-ar cur ;
CC = $(GCC_PATH)-gcc ;
C++ = $(GCC_PATH)-g++ ;
LD = $(GCC_PATH)-ld ;
RANLIB = $(GCC_PATH)-ranlib ;
LINK = $(C++) ;

OPTIM = -Os -g ;

DEFINES = __STM32__ ARM_MATH_CM4 HSE_VALUE=16000000 ;

#DEFINES += USE_FULL_ASSERT ;
#DEFINES += DEBUG ;
#DEFINES += "\"assert_param(a)=\"" ; # Temporarily disable warnings about implicit assert_param()
#DEFINES += USE_HW_RTC ;

#TODO: Find a better way to add target-specific include directories
if $(TARGET) = stm32f4xx {
	STM32INC += lib/hal/STM32CubeF4/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc ;
	STM32INC += lib/hal/STM32CubeF4/Middlewares/Third_Party/FatFS/src ;
	STM32INC += lib/hal/STM32CubeF4/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS ;
	STM32INC += lib/hal/STM32CubeF4/Middlewares/Third_Party/FreeRTOS/Source/include ;
	STM32INC += lib/hal/STM32CubeF4/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F ;
	STM32INC += lib/hal/STM32CubeF4/Middlewares/ST/STM32_USB_Device_Library/Core/Inc ;
	STM32INC += lib/hal/STM32CubeF4/Drivers/STM32F4xx_HAL_Driver/Inc ;
	STM32INC += lib/hal/STM32CubeF4/Drivers/CMSIS/Device/ST/STM32F4xx/Include ;
	STM32INC += lib/hal/STM32CubeF4/Drivers/CMSIS/Include ;
} else if $(TARGET) = stm32h7xx {
	STM32INC += lib/hal/STM32CubeH7/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc ;
	STM32INC += lib/hal/STM32CubeH7/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS ;
	STM32INC += lib/hal/STM32CubeH7/Middlewares/Third_Party/FreeRTOS/Source/include ;
	STM32INC += lib/hal/STM32CubeH7/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F ;
	STM32INC += lib/hal/STM32CubeH7/Middlewares/ST/STM32_USB_Device_Library/Core/Inc ;
	STM32INC += lib/hal/STM32CubeH7/Drivers/STM32H7xx_HAL_Driver/Inc ;
	STM32INC += lib/hal/STM32CubeH7/Drivers/CMSIS/Device/ST/STM32H7xx/Include ;
	STM32INC += lib/hal/STM32CubeH7/Drivers/CMSIS/Include ;
	STM32INC += lib/hal/STM32CubeH7/Middlewares/Third_Party/FatFs/src ;
} else {
	echo "Unsupported target" ;
	exit ;
}

INCLUDE += $(TOP)/lib/core/$(TARGET) $(TOP)target/$(TARGET) $(STM32INC) ;

# M4 with hardware floating point
CFLAGS += $(OPTIM) -D$(DEFINES) -I$(INCLUDE) -mthumb -mlittle-endian -mfpu=fpv4-sp-d16 -mfloat-abi=hard -mcpu=cortex-m4 ;
CCFLAGS += $(CFLAGS) -std=c99 ;
C++FLAGS += $(CFLAGS) -fno-rtti -fno-exceptions ;

#LDFLAGS += -nostdlib -nostartfiles -ffreestanding -mfloat-abi=hard ;
LDFLAGS += -mfpu=fpv4-sp-d16 -mthumb -mfloat-abi=hard ; #/ --specs=nosys.specs ;

CC += $(CFLAGS) $(COPT) ;
C++ += $(CFLAGS) ;
LINK += $(LDFLAGS) -L $(ALL_LOCATE_TARGET) -Wl,--gc-sections -mcpu=cortex-m4 ;

